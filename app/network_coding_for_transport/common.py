#! /usr/bin/env python3
# -*- coding: utf-8 -*-
# vim:fenc=utf-8

"""
About: Common parameters and utility functions shared by all coders.
"""

import struct

import kodo

# Default MTU size in ComNetsEmu
MTU = 1500
BUFFER_SIZE = 4096  # CPU cache line
CODER_LOG_LEVEL = "error"
# Sleep time of each IO loop.
IO_SLEEP = 0.0005  # second

# KODO parameters
FIELD = kodo.field.binary8
SYMBOLS = 10
SYMBOL_SIZE = 100
# Initial number of redundant packets generated by the encoder and recoder.
INIT_REDUNDANCY = int(SYMBOLS / 2)


"""
Meta data header format:

Offsets Octet 0               1                            2                   3         4
Octet
0             | Type          | Generation sequence number | Payload length              |

- Type:
  0x00 -> UDP segment.

- Generation sequence number: Current generation number starting from 0.

- Payload length: The length of the original payload.
    - For type 0x00: The length in bytes of the UDP payload.
"""

"""
Deployed coders can receive two types of UDP segments:

- DATA segment: The data traffic sent from the client. These segments should be
  coded and sent to the destination server.
- OAM segment: Generated by the SDN controller to manage deployed coders.

The DATA and OAM segments use different destination port number.

The payload format of OAM segment:

Offsets Octet 0                   1
Octet
0             | Redundancy number |

"""

META_DATA_LEN = 1 + 2 + 2  # bytes

MD_TYPE_UDP = 0x00

UDP_PORT_OAM = 8888
UDP_PORT_DATA = 9999


def pull_metadata(buf, offset):
    """Parse and return meta data"""
    md_type, generation, md_pl_len = struct.unpack_from(">BBH", buf, offset)
    return (md_type, generation, md_pl_len)


def push_metadata(buf, offset, metadata):
    md_type, generation, md_pl_len = metadata
    struct.pack_into(">BBH", buf, offset, md_type, generation, md_pl_len)
